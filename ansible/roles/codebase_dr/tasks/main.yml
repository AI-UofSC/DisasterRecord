---

- name: Check if DisasterRecord Exists
  stat:
    path: ~/workspace/DisasterRecord/README.md
  register: DisasterRecord_init

- name: Check if DisasterRecord VE Exists
  stat:
    path: ~/workspace/DisasterRecord/bin/activate
  register: DisasterRecordVE_init

- name: Clone DisasterRecord
  git:
    repo: https://github.com/shrutikar/DisasterRecord.git
    dest: ~/workspace/DisasterRecord
    version: integration
  when: DisasterRecord_init.stat.exists == False

- name: Create DisasterRecord virtualenv
  command: virtualenv -p python3 ~/workspace/DisasterRecord
  when: DisasterRecordVE_init.stat.exists == False

# COPY DisasterRecord REPLACEMENT CODE

- name: Copy fixed DisasterRecord/requirements.txt file to ~/workspace/DisasterRecord
  copy: src=DisasterRecord/requirements.txt dest=~/workspace/DisasterRecord/requirements.txt owner=root group=root mode=0644

- name: Copy fixed DisasterRecord/chennai.geojson file to ~/workspace/DisasterRecord
  copy: src=DisasterRecord/chennai.geojson dest=~/workspace/DisasterRecord/chennai.geojson owner=root group=root mode=0644

- name: Copy fixed DisasterRecord/chennai_geohashes_8prec.json file to ~/workspace/DisasterRecord
  copy: src=DisasterRecord/chennai_geohashes_8prec.json dest=~/workspace/DisasterRecord/chennai_geohashes_8prec.json owner=root group=root mode=0644

- name: Generate make.sh
  template: src=make.sh.j2 dest=~/workspace/DisasterRecord/make.sh owner=root group=root mode=0755

- name: Generate process_dataset.sh
  template: src=process_dataset.sh.j2 dest=~/workspace/DisasterRecord/process_dataset.sh owner=root group=root mode=0755

- name: Generate core.py
  template: src=DisasterRecord/core.py.j2 dest=~/workspace/DisasterRecord/core.py owner=root group=root mode=0644

- name: Generate file-mapping.sh
  template: src=DisasterRecord/file-mapping.sh.j2 dest=~/workspace/DisasterRecord/file-mapping.sh owner=root group=root mode=0755

- name: Generate osm-mapping.sh
  template: src=DisasterRecord/osm-mapping.sh.j2 dest=~/workspace/DisasterRecord/osm-mapping.sh owner=root group=root mode=0755

- name: Generate tweet-mapping.sh
  template: src=DisasterRecord/tweet-mapping.sh.j2 dest=~/workspace/DisasterRecord/tweet-mapping.sh owner=root group=root mode=0755

- name: Copy fixed DisasterRecord/requirements.txt file to ~/workspace/DisasterRecord
  copy: src=DisasterRecord/requirements.txt dest=~/workspace/DisasterRecord/requirements.txt owner=root group=root mode=0644

- name: Create mike_img directory
  file:
    path: ~/workspace/DisasterRecord/mike_img
    state: directory

- name: Create mike_img/models directory
  file:
    path: ~/workspace/DisasterRecord/mike_img/models
    state: directory

- name: Create mike_img/models/flood directory
  file:
    path: ~/workspace/DisasterRecord/mike_img/models/flood
    state: directory

- name: Copy fixed DisasterRecord/load_pb.py file to ~/workspace/DisasterRecord/mike_img
  copy: src=DisasterRecord/load_pb.py dest=~/workspace/DisasterRecord/mike_img/load_pb.py owner=root group=root mode=0644

- name: Copy fixed DisasterRecord/inf_service.py file to ~/workspace/DisasterRecord/mike_img
  copy: src=DisasterRecord/inf_service.py dest=~/workspace/DisasterRecord/mike_img/inf_service.py owner=root group=root mode=0644

- name: Generate server.py
  template: src=server.py.j2 dest=~/workspace/DisasterRecord/server.py owner=root group=root mode=0644

- name: Copy fixed DisasterRecord/DroneData.py file to ~/workspace/DisasterRecord
  copy: src=DisasterRecord/DroneData.py dest=~/workspace/DisasterRecord/DroneData.py owner=root group=root mode=0644

- name: Install xlrd
  pip: 
    name: xlrd
    virtualenv: ~/workspace/DisasterRecord

- name: Install tweepy
  pip: 
    name: tweepy
    virtualenv: ~/workspace/DisasterRecord

- name: Install python-geohash
  pip: 
    name: python-geohash
    virtualenv: ~/workspace/DisasterRecord

- name: Install elasticsearch_dsl
  pip: 
    name: elasticsearch_dsl
    virtualenv: ~/workspace/DisasterRecord

- name: Install watson_developer_cloud
  pip: 
    name: watson_developer_cloud
    virtualenv: ~/workspace/DisasterRecord

- name: Install tensorflow
  pip: 
    name: tensorflow
    virtualenv: ~/workspace/DisasterRecord

- name: Install Other DisasterRecord dependencies
  pip: 
    requirements: ~/workspace/DisasterRecord/requirements.txt
    virtualenv: ~/workspace/DisasterRecord

- name: Install LNEx dependencies for DisasterRecord
  pip: 
    requirements: ~/workspace/LNEx/requirements.txt
    virtualenv: ~/workspace/DisasterRecord

- name: Create symbolic link for LNEx
  file:
    src: "/root/workspace/LNEx/LNEx"
    dest: "/root/workspace/DisasterRecord/LNEx"
    state: link

- name: Check if DisasterRecord ObjectDetection Exists
  stat:
    path: ~/workspace/DisasterRecord/object_detection
  register: DisasterRecordOD_init

- name: Clone Tensorflow-ImageObjects-Summarizer
  git:
    repo: https://github.com/halolimat/Tensorflow-ImageObjects-Summarizer
    dest: ~/workspace/DisasterRecord/OBJTMP
  when: DisasterRecordOD_init.stat.exists == False

- name: Move object_detection/ back a folder
  command: mv /root/workspace/DisasterRecord/OBJTMP/object_detection /root/workspace/DisasterRecord/object_detection
  when: DisasterRecordOD_init.stat.exists == False

- name: Remove OBJTMP
  command: rm -r /root/workspace/DisasterRecord/OBJTMP
  when: DisasterRecordOD_init.stat.exists == False

- name: Copy fixed DisasterRecord/object_detection/ObjectDetector.py file to ~/workspace/DisasterRecord/object_detection
  copy: src=DisasterRecord/ObjectDetector.py dest=~/workspace/DisasterRecord/object_detection/ObjectDetector.py owner=root group=root mode=0644

- name: Copy DisasterRecord/flood.pb file to ~/workspace/DisasterRecord/mike_img
  copy: src=DisasterRecord/flood.pb dest=~/workspace/DisasterRecord/mike_img/models/flood/flood.pb owner=root group=root mode=0644

- name: Copy DisasterRecord/classes.txt file to ~/workspace/DisasterRecord/mike_img
  copy: src=DisasterRecord/classes.txt dest=~/workspace/DisasterRecord/mike_img/models/flood/classes.txt owner=root group=root mode=0644

- name: Copy DisasterRecord/drEnv file to ~/workspace/DisasterRecord
  copy: src=DisasterRecord/drEnv dest=~/workspace/DisasterRecord/drEnv owner=root group=root mode=0755

- name: Copy startDR-Backend file to ~
  copy: src=DisasterRecord/startDR-Backend dest=~ owner=root group=root mode=0755

- name: Copy killDR-Backend file to ~
  copy: src=DisasterRecord/killDR-Backend dest=~ owner=root group=root mode=0755

- name: Copy startDR-Frontend file to ~
  copy: src=DisasterRecord/startDR-Frontend dest=~ owner=root group=root mode=0755

- name: Copy killDR-Frontend file to ~
  copy: src=DisasterRecord/killDR-Frontend dest=~ owner=root group=root mode=0755

- name: Copy DR Worker Service
  copy: src=DRWorker/dr_worker_service.py dest=~/workspace/DisasterRecord/dr_worker_service.py

- name: Copy DisasterRecord/static/js/map.js file to ~/workspace/DisasterRecord/static/js
  copy: src=DisasterRecord/static/js/map.js dest=~/workspace/DisasterRecord/static/js/map.js owner=root group=root mode=0644

- name: Copy DisasterRecord/static/js/heatmap.js file to ~/workspace/DisasterRecord/static/js
  copy: src=DisasterRecord/static/js/heatmap.js dest=~/workspace/DisasterRecord/static/js/heatmap.js owner=root group=root mode=0644

- name: Copy DisasterRecord/static/js/main.js file to ~/workspace/DisasterRecord/static/js
  copy: src=DisasterRecord/static/js/main.js dest=~/workspace/DisasterRecord/static/js/main.js owner=root group=root mode=0644

- name: Copy html templates
  copy: src=DisasterRecord/templates/{{ item }} dest=~/workspace/DisasterRecord/templates/{{ item }} owner=root group=root mode=0644
  with_items:
    - error.html
    - list.html
    - create.html
    - manage.html
    - index.html

- name: Copy icons
  copy: src=DisasterRecord/static/{{ item }} dest=~/workspace/DisasterRecord/static/{{ item }} owner=root group=root mode=0644
  with_items:
    - camera.png
    - videoclip.png
    - detection.png
    - car.png
    - drone.png
    - alert.png
    - error.png
    - finished.png
    - pending.png
    - processing.png
    - remove.png

- name: Install dependencies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - unzip

- name: Create TC_Service directory
  file:
    path: ~/workspace/TC_Service
    state: directory

- name: Create TC_Service code directory
  file:
    path: ~/workspace/TC_Service/code
    state: directory

- name: Copy tc_service.py file to ~/workspace/TC_Service/code
  copy: src=TCService/tc_service.py dest=~/workspace/TC_Service/code owner=root group=root mode=0644

- name: Copy finalized_model.sav file to ~/workspace/TC_Service/code
  copy: src=TCService/finalized_model.sav dest=~/workspace/TC_Service/code owner=root group=root mode=0644

- name: Check if TC_Service VE Exists
  stat:
    path: ~/workspace/TC_Service/bin/activate
  register: TC_ServiceVE_init

- name: Install LNEx dependencies for DisasterRecord
  pip: 
    name: "{{ packages }}"
    virtualenv: ~/workspace/TC_Service
  vars:
    packages:
      - flask
      - gensim
      - xlrd
      - nltk
      - sklearn
      - imblearn

- name: Create TC_Service virtualenv
  command: virtualenv -p python2 ~/workspace/TC_Service
  when: TC_ServiceVE_init.stat.exists == False

- name: Copy DisasterRecord/tcEnv file to ~/workspace/TC_Service
  copy: src=DisasterRecord/tcEnv dest=~/workspace/TC_Service/tcEnv owner=root group=root mode=0755

- name: Copy startTC file to ~
  copy: src=DisasterRecord/startTC dest=~ owner=root group=root mode=0755

- name: Copy killTC file to ~
  copy: src=DisasterRecord/killTC dest=~ owner=root group=root mode=0755

- name: Copy startINF file to ~
  copy: src=DisasterRecord/startINF dest=~ owner=root group=root mode=0755

- name: Copy killINF file to ~
  copy: src=DisasterRecord/killINF dest=~ owner=root group=root mode=0755